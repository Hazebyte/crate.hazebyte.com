"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[133],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?a.createElement(g,o(o({ref:t},u),{},{components:r})):a.createElement(g,o({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4730:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),o=["components"],l={},s="Getting Started",c={unversionedId:"api/introduction",id:"api/introduction",title:"Getting Started",description:"In order to use CrateReloadedAPI, you should first install the latest version of CrateReloaded.",source:"@site/docs/api/introduction.md",sourceDirName:"api",slug:"/api/introduction",permalink:"/docs/api/introduction",draft:!1,editUrl:"https://github.com/Hazebyte/CrateReloaded/tree/dev/docs/api/introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"API (For Developers)",permalink:"/docs/category/api-for-developers"}},u={},p=[{value:"Project Setup",id:"project-setup",level:2},{value:"Accessing the API",id:"accessing-the-api",level:2},{value:"Create a crate",id:"create-a-crate",level:2},{value:"Manipulate existing crates",id:"manipulate-existing-crates",level:2},{value:"Get all crates",id:"get-all-crates",level:3},{value:"Get a single crate",id:"get-a-single-crate",level:3},{value:"Check if item is a crate",id:"check-if-item-is-a-crate",level:3},{value:"Next steps",id:"next-steps",level:2}],d={toc:p};function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"In order to use CrateReloadedAPI, you should first install the latest version of CrateReloaded. "),(0,i.kt)("p",null,"For support, please send us a message in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Hazebyte/CrateReloadedAPI/issues"},"Github")," or ",(0,i.kt)("a",{parentName:"p",href:"https://discord.gg/0srgnnU1nbB8wMML"},"Discord"),"."),(0,i.kt)("h2",{id:"project-setup"},"Project Setup"),(0,i.kt)("p",null,"To utilize CrateReloaded, you must first link the API to your setup. To do this, you may download the API directly or setup Gradle/Maven. ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Hazebyte/CrateReloadedAPI"},"Instructions")),(0,i.kt)("p",null,"After you have done this, make sure to add the following line to your plugin.yml."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"depend: [CrateReloaded]\n")),(0,i.kt)("h2",{id:"accessing-the-api"},"Accessing the API"),(0,i.kt)("p",null,"The API is a class called CrateAPI. All of the methods may be accessed statically."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"CrateAPI api = CrateAPI.getInstance();\n")),(0,i.kt)("h2",{id:"create-a-crate"},"Create a crate"),(0,i.kt)("p",null,"A crate may be created using an ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"type"),". This will manage the crate in-memory however the\ncrate will be lost unless you save it to memory."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'String id = "UniqueCrate"; // This is the ID used to give the crate in-game.\nCrateType type = CrateType.MYSTERY // KEY, MYSTERY, SUPPLY\n\nCrate crate = CrateAPI.getCrateRegistrar().createCrate(id, type); // Creates a crate\nCrateAPI.getCrateRegistrar().add(crate) // Registers the plugin\n')),(0,i.kt)("p",null,"For a more in-depth tutorial on how to create crates and add rewards, click here."),(0,i.kt)("h2",{id:"manipulate-existing-crates"},"Manipulate existing crates"),(0,i.kt)("p",null,"You may manipulate crates dynamically. Keep in mind that all modifications to crates are in-memory and\nwill be lost unless saved to a flat file."),(0,i.kt)("h3",{id:"get-all-crates"},"Get all crates"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"List<Crate> crates = CrateAPI.getCrateRegistrar().getCrates();\n")),(0,i.kt)("h3",{id:"get-a-single-crate"},"Get a single crate"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"String id = ... // The crate's id\nCrate crateByID = CrateAPI.getCrateRegistrar().getCrate(id);\n\nItemStack item = ... // The crate's item\nCrate crateByItem = CrateAPI.getCrateRegistrar().getCrate(item);\n")),(0,i.kt)("h3",{id:"check-if-item-is-a-crate"},"Check if item is a crate"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"ItemStack item = ... // An item\nboolean is = CrateAPI.getCrateRegistrar().isCrate(item);\n")),(0,i.kt)("h2",{id:"next-steps"},"Next steps"),(0,i.kt)("p",null,"If you think this tutorial is enough, you may want to read the ",(0,i.kt)("a",{parentName:"p",href:"https://hazebyte.github.io/CrateReloadedAPI/"},"API documentation"),". Otherwise, check the sidebar under API for links to more tutorials."))}m.isMDXComponent=!0}}]);